package id.ac.itats.skripsi.orm;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import id.ac.itats.skripsi.orm.Node;
import id.ac.itats.skripsi.orm.Way;
import id.ac.itats.skripsi.orm.Place;
import id.ac.itats.skripsi.orm.Road;
import id.ac.itats.skripsi.orm.RoadPlace;

import id.ac.itats.skripsi.orm.NodeDao;
import id.ac.itats.skripsi.orm.WayDao;
import id.ac.itats.skripsi.orm.PlaceDao;
import id.ac.itats.skripsi.orm.RoadDao;
import id.ac.itats.skripsi.orm.RoadPlaceDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig nodeDaoConfig;
    private final DaoConfig wayDaoConfig;
    private final DaoConfig placeDaoConfig;
    private final DaoConfig roadDaoConfig;
    private final DaoConfig roadPlaceDaoConfig;

    private final NodeDao nodeDao;
    private final WayDao wayDao;
    private final PlaceDao placeDao;
    private final RoadDao roadDao;
    private final RoadPlaceDao roadPlaceDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        nodeDaoConfig = daoConfigMap.get(NodeDao.class).clone();
        nodeDaoConfig.initIdentityScope(type);

        wayDaoConfig = daoConfigMap.get(WayDao.class).clone();
        wayDaoConfig.initIdentityScope(type);

        placeDaoConfig = daoConfigMap.get(PlaceDao.class).clone();
        placeDaoConfig.initIdentityScope(type);

        roadDaoConfig = daoConfigMap.get(RoadDao.class).clone();
        roadDaoConfig.initIdentityScope(type);

        roadPlaceDaoConfig = daoConfigMap.get(RoadPlaceDao.class).clone();
        roadPlaceDaoConfig.initIdentityScope(type);

        nodeDao = new NodeDao(nodeDaoConfig, this);
        wayDao = new WayDao(wayDaoConfig, this);
        placeDao = new PlaceDao(placeDaoConfig, this);
        roadDao = new RoadDao(roadDaoConfig, this);
        roadPlaceDao = new RoadPlaceDao(roadPlaceDaoConfig, this);

        registerDao(Node.class, nodeDao);
        registerDao(Way.class, wayDao);
        registerDao(Place.class, placeDao);
        registerDao(Road.class, roadDao);
        registerDao(RoadPlace.class, roadPlaceDao);
    }
    
    public void clear() {
        nodeDaoConfig.getIdentityScope().clear();
        wayDaoConfig.getIdentityScope().clear();
        placeDaoConfig.getIdentityScope().clear();
        roadDaoConfig.getIdentityScope().clear();
        roadPlaceDaoConfig.getIdentityScope().clear();
    }

    public NodeDao getNodeDao() {
        return nodeDao;
    }

    public WayDao getWayDao() {
        return wayDao;
    }

    public PlaceDao getPlaceDao() {
        return placeDao;
    }

    public RoadDao getRoadDao() {
        return roadDao;
    }

    public RoadPlaceDao getRoadPlaceDao() {
        return roadPlaceDao;
    }

}
